package AuctionApp;


/**
* AuctionApp/AuctionFactoryPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from auction.idl
* Sunday, April 6, 2014 2:45:20 AM CDT
*/

public abstract class AuctionFactoryPOA extends org.omg.PortableServer.Servant
 implements AuctionApp.AuctionFactoryOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("authenticate", new java.lang.Integer (0));
    _methods.put ("getActiveAuctions", new java.lang.Integer (1));
    _methods.put ("getInactiveAuction", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // Raises INVALID_USER exception if the userId is in the database, but the password doesn't match
       case 0:  // AuctionApp/AuctionFactory/authenticate
       {
         try {
           String userId = in.read_string ();
           String password = in.read_string ();
           this.authenticate (userId, password);
           out = $rh.createReply();
         } catch (AuctionApp.AuctionFailure $ex) {
           out = $rh.createExceptionReply ();
           AuctionApp.AuctionFailureHelper.write (out, $ex);
         }
         break;
       }


  // Raises GENERIC_ERROR if an error occurs when contacting the auction servers
       case 1:  // AuctionApp/AuctionFactory/getActiveAuctions
       {
         try {
           String userId = in.read_string ();
           AuctionApp.AuctionFactoryPackage.AuctionsHolder sellerAuctions = new AuctionApp.AuctionFactoryPackage.AuctionsHolder ();
           org.omg.CORBA.IntHolder numSellerAuctions = new org.omg.CORBA.IntHolder ();
           AuctionApp.AuctionFactoryPackage.AuctionsHolder bidderAuctions = new AuctionApp.AuctionFactoryPackage.AuctionsHolder ();
           org.omg.CORBA.IntHolder numBidderAuctions = new org.omg.CORBA.IntHolder ();
           this.getActiveAuctions (userId, sellerAuctions, numSellerAuctions, bidderAuctions, numBidderAuctions);
           out = $rh.createReply();
           AuctionApp.AuctionFactoryPackage.AuctionsHelper.write (out, sellerAuctions.value);
           out.write_ulong (numSellerAuctions.value);
           AuctionApp.AuctionFactoryPackage.AuctionsHelper.write (out, bidderAuctions.value);
           out.write_ulong (numBidderAuctions.value);
         } catch (AuctionApp.AuctionFailure $ex) {
           out = $rh.createExceptionReply ();
           AuctionApp.AuctionFailureHelper.write (out, $ex);
         }
         break;
       }


  // Raises GENERIC_ERROR if an error occurs when contacting the auction servers
       case 2:  // AuctionApp/AuctionFactory/getInactiveAuction
       {
         try {
           String $result = null;
           $result = this.getInactiveAuction ();
           out = $rh.createReply();
           out.write_string ($result);
         } catch (AuctionApp.AuctionFailure $ex) {
           out = $rh.createExceptionReply ();
           AuctionApp.AuctionFailureHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AuctionApp/AuctionFactory:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public AuctionFactory _this() 
  {
    return AuctionFactoryHelper.narrow(
    super._this_object());
  }

  public AuctionFactory _this(org.omg.CORBA.ORB orb) 
  {
    return AuctionFactoryHelper.narrow(
    super._this_object(orb));
  }


} // class AuctionFactoryPOA
